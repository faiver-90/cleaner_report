services:
  nginx:
    container_name: nginx
    image: nginx
    restart: always
    volumes:
      - ./nginx_conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx_conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:80"
    depends_on:
      - auth_service
      #      - llm_service

  auth_service:
    container_name: auth
    build: ./src/auth_service
    command:  >
      bash -c "
      pip install --no-cache-dir -r requirements.txt && 
      alembic upgrade head &&
      uvicorn init_app:app --host 0.0.0.0 --port 8001 --reload"
    restart: always
    volumes:
      - ./src/auth_service:/app
    expose:
      - "8001"
    env_file:
      - ./src/auth_service/.env
#      depends_on:
#        - db
#        - redis
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  tg_bot:
    container_name: tg_bot
    build: ./src/tg_bot
    command: bash -c "pip install -r requirements.txt && python main.py"
    volumes:
      - ./src/tg_bot:/app
    env_file:
      - ./src/tg_bot/.env
    restart: always
    depends_on:
      - auth_service


#    llm_service:
#      container_name: llm
#      build: ./src/llm_service
#      command: bash -c "
#        poetry install --no-root &&
#        poetry run uvicorn init_app:app --host 0.0.0.0 --port 8002 --reload"
#      restart: always
#      volumes:
#        - ./src/llm_service:/app/src
#      expose:
#        - "8002"
#      env_file:
#        - ./src/llm_service/.env
#      depends_on:
#        - db
#        - redis
#      logging:
#        options:
#          max-size: "10m"
#          max-file: "3"

#  celery-beat:
#    container_name: tg_beat
#    restart: unless-stopped
#    build: ./src/gateway_service/
#    command: bash -c "
#      poetry install --no-root &&
#      poetry run celery -A _celery.celery_worker.celery_app beat -l info"
#    volumes:
#      - ./src/gateway_service:/app
##    depends_on:
##      - db
##      - redis
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "3"
#
#  celery-worker:
#    container_name: tg_cel
#    build: ./src/gateway_service/
#    restart: unless-stopped
#    command: bash -c "
#      poetry install --no-root &&
#      poetry run celery -A _celery.celery_worker.celery_app beat -l info"
#    volumes:
#      - ./src/gateway_service:/app
##    depends_on:
##      - db
##      - redis
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "3"
#
  db:
    container_name: db
    image: postgres:14-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    container_name: reddis
    image: redis:latest
    restart: always
    env_file:
      - .env
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

#  rabbitmq:
#    container_name: rabbit
#    image: rabbitmq:3.10.7-management
#    ports:
#      - "5672:5672"     # ← AMQP для Celery и других клиентов
#      - "15672:15672"   # ← Web UI


volumes:
  postgres_data:
